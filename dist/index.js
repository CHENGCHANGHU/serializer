!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Serializer=t():e.Serializer=t()}("undefined"==typeof self?this:self,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{parse:()=>o,stringify:()=>n});class r{value;constructor(e){this.value=e}toString(){const e=Number(this.value);return isNaN(e)?"null":e.toLocaleString("en-US",{useGrouping:!1,maximumFractionDigits:20})}}function o(e){if(e=e.trim(),/^null$/.test(e))return null;if(/^true$/.test(e))return!0;if(/^false$/.test(e))return!1;if(/^\-?[1-9]\d*$/.test(e))return function(e){try{return"number"==typeof e?e:String(Number(e))===e||/^\-?(([1-9]\d*\.?\d*)|(0\.\d*))[eE][\+\-]?\d+$/.test(e)?Number(e):String(BigInt(e))===e?BigInt(e):NaN}catch(e){return console.error(e),NaN}}(e);if(/^\-?(([1-9]\d*)|(0))\.\d*$/.test(e))return new r(e);if(/^\-?(([1-9]\d*\.?\d*)|(0\.\d*))[eE][\+\-]?\d+$/.test(e))return Number(e);if(/^".*"$/.test(e))return e.slice(1,-1);if(/^\[.*\]$/.test(e)){const t=e.slice(1,-1).trim(),r=[];let n=0,i=0;for(;void 0!==t[i];){for(;/\s/.test(t[i]);)n++,i++;if('"'===t[i]){for(i++;!/^\"$/.test(t[i]);)/^\\$/.test(t[i])&&i++,i++;for(i++;/\s/.test(t[i]);)i++;if(r.push(o(t.slice(n,i))),void 0===t[i])break;if(","===t[i]){i++,n=i;continue}}if("["===t[i]){i++;let e=1;for(;0!==e&&void 0!==t[i];)"["===t[i]&&e++,"]"===t[i]&&e--,i++;if(0!==e)throw new Error("Array is not closed!");for(;/\s/.test(t[i]);)i++;if(r.push(o(t.slice(n,i))),n=i,void 0===t[i])break;if(","===t[i]){n++,i++;continue}}if("{"===t[i]){i++;let e=1;for(;0!==e&&void 0!==t[i];)"{"===t[i]&&e++,"}"===t[i]&&e--,i++;if(0!==e)throw new Error("Object is not closed!");for(;/\s/.test(t[i]);)i++;if(r.push(o(t.slice(n,i))),n=i,void 0===t[i])break;if(","===t[i]){n++,i++;continue}}for(;","!==t[i]&&void 0!==t[i];)i++;if(","!==t[i]){if(void 0===t[i]){r.push(o(t.slice(n,i)));break}}else r.push(o(t.slice(n,i))),i++,n=i}return r}if(/^{.*}$/.test(e)){const t=e.slice(1,-1).trim(),r={};let n=0,i=0;for(;void 0!==t[i];){for(;/\s/.test(t[i]);)n++,i++;if('"'!==t[i])throw new Error("Invalid object key!");for(n=i,i++;!/^\"$/.test(t[i]);)/^\\$/.test(t[i])&&i++,i++;i++;const e=t.slice(n+1,i-1);for(;/\s/.test(t[i]);)i++;if(":"!==t[i])throw new Error("Colon Missing!");for(i++;/\s/.test(t[i]);)i++;if(n=i,'"'===t[i]){for(i++;!/^\"$/.test(t[i]);)/^\\$/.test(t[i])&&i++,i++;for(i++;/\s/.test(t[i]);)i++;if(r[e]=o(t.slice(n,i)),n=i,void 0===t[i])break;if(","===t[i]){n++,i++;continue}}if("["===t[i]){i++;let s=1;for(;0!==s&&void 0!==t[i];)"["===t[i]&&s++,"]"===t[i]&&s--,i++;if(0!==s)throw new Error("Array is not closed!");for(;/\s/.test(t[i]);)i++;if(r[e]=o(t.slice(n,i)),n=i,void 0===t[i])break;if(","===t[i]){n++,i++;continue}}if("{"===t[i]){i++;let s=1;for(;0!==s&&void 0!==t[i];)"{"===t[i]&&s++,"}"===t[i]&&s--,i++;if(0!==s)throw new Error("Object is not closed!");for(;/\s/.test(t[i]);)i++;if(r[e]=o(t.slice(n,i)),n=i,void 0===t[i])break;if(","===t[i]){n++,i++;continue}}for(;","!==t[i]&&void 0!==t[i];)i++;if(","!==t[i]){if(void 0===t[i]){r[e]=o(t.slice(n,i));break}}else r[e]=o(t.slice(n,i)),i++,n=i}return r}throw new Error("Invalid JSON String!")}function n(e="",{indentionString:t=" ",indentionLevel:r=0,toHTML:o=!1}={indentionString:" ",indentionLevel:0,toHTML:!1}){const i=new Array(r).fill(t).join("");switch(Object.prototype.toString.call(e)){case"[object Undefined]":return o?'<span style="color: #0000aa;">undefined</span>':"undefined";case"[object Null]":return o?'<span style="color: #0000aa;">null</spa>':"null";case"[object String]":return o?`<span style="color: #aaaa00;">"${e.toString()}"</span>`:`"${e.toString()}"`;case"[object Number]":case"[object Boolean]":return o?`<span style="color: #0000aa;">${e.toString()}</span>`:e.toString();case"[object Array]":return e.length?`[\n${i}${t}${e.map((e=>n(e,{indentionString:t,indentionLevel:r+1,toHTML:o}))).join(`,\n${i}${t}`)}\n${i}]`:"[]";case"[object Object]":return Object.keys(e).length?`{\n${i}${t}${Object.keys(e).map((i=>`"${i}":${t}${n(e[i],{indentionString:t,indentionLevel:r+1,toHTML:o})}`)).join(`,\n${i}${t}`)}\n${i}}`:"{}";default:return console.log(Object.prototype.toString.call(e)),e}}return t})()));